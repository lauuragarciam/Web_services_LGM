
package com.example.restaurant;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import java.util.List;


/**
 * This class was generated by Apache CXF 3.5.11
 * 2025-03-26T18:51:04.427+01:00
 * Generated source version: 3.5.11
 *
 */
public final class RestaurantService_RestaurantServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://restaurant.example.com/", "RestaurantServiceImplService");

    private RestaurantService_RestaurantServiceImplPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = RestaurantServiceImplService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        RestaurantServiceImplService ss = new RestaurantServiceImplService(wsdlURL, SERVICE_NAME);
        RestaurantService port = ss.getRestaurantServiceImplPort();
        
    
        // Añadir WS-Security Username/Password
        ClientSecurity.applySecurity(port, "Laura", "WebServices");


        {
        System.out.println("Invoking getMenu...");
        List<Dish> menu = port.getMenu();
        System.out.println("Menu:");

        for (Dish dish : menu) {
            System.out.println("- " + dish.getName() + " (€" + dish.getPrice() + ")");
        }

        
    	if (!menu.isEmpty()) {
    	    String dishToOrder = menu.get(0).getName();
    	    System.out.println("Invoking placeOrder with: " + dishToOrder);
    	    String result = port.placeOrder(dishToOrder);
    	    System.out.println("placeOrder.result=" + result);
    	} else {
    	    System.out.println("No dishes available to order.");
    	}

        }

        System.exit(0);
    }

}
